<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<<<<<<< 92fc90803f7f4fef98363b3081ee5ccb32944d26
<projectsConfig 
    xmlns="http://www.kaaproject.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="credentials_demo">
        <name>Credentials demo</name>
        <description>Kaa Credentials management demo app based on Java SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the server-side <b>Credentials management</b> feature based on the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#sdk-type" target="_blank">Kaa Java SDK</a>.
</p>

The sample application uses the following methods to manage credentials:

<ul>
	<li>
		<code>getEndpointKeyHash</code> method is used to retrieve the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#endpoint-ep" target="_blank">endpoint</a> data used for connection to the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-server" target="_blank">Kaa server</a>.
	</li>
	<li>
		<code>DefaultFailoverStrategy</code> class manages the application behavior when an error occurs outside the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#endpoint-ep" target="_blank">Kaa client</a>.
		For example, when no Bootstrap service or Operations service is found, no Internet connection, error while validating the endpoint credentials, etc.
	</li>
</ul>

<h1>Launching</h1>

<p>
	To launch this sample application on the Kaa Java SDK, you need to prepare your Java SDK environment.
	To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/Java/" target="_blank">Using Kaa endpoint SDKs</a>.
</p>

<p>
	For sample applications that utilize Kaa Java SDK, both the binary files (.jar archive) and the source code (.tar.gz archive) are available for download.
	If you want to only launch the sample application, download the binary files.
	If you want to explore the source code of the sample application, download the source code archive.
</p>

<h2>Install using the binary files</h2>

To install the Credentials management sample application using the binary files:
	
<ol>
	<li>
		Click the <b>Binary</b> button.
		A binary build window will open.
		Click <b>Ok</b> and download the .jar file.
	</li>
	<li>
		Run the following command from the directory containing the downloaded .jar archive.
		
		<pre>
			$ java -jar JCredentialsDemo.jar
		</pre>
		
		The sample application console will display the startup message.
								
	</li>
</ol>

<h2>Install using the source code</h2>

To install the Credentials management sample application using the source code:

<ol>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive.
	</li>
	<li>
		To build from new sources you need to have Apache Ant installed on your host machine.
		To install Apache ant, run the following command from the directory containing the unpacked sources.
		
		<pre>
			$ ant debug
		</pre>
		
		To launch the sample application from the previously built sources run the following command from the directory containing the sources.
		
		<pre>
			$ java -jar build/jar/JCredentialsDemo.jar
		</pre>
	</li>
</ol>
	
If you want to modify the sample application source code or create your own applications using the Kaa platform, see <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Your-first-Kaa-application/" target="_blank">Your first Kaa application</a>.

<h1>Troubleshooting</h1>

For troubleshooting information, see <a href="http://kaaproject.github.io/kaa/docs/Administration-guide/Troubleshooting/" target="_blank">Troubleshooting</a>.
			]]>
        </details>
        
        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->
             
        <sdkLanguage>JAVA</sdkLanguage>
        
        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->
             
        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>CREDENTIALS</features>
        <complexity>BASIC</complexity>
=======
<projectsConfig
        xmlns="http://www.kaaproject.org"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="credentials_demo_java">
        <name>Credentials demo</name>
        <description>Credentials desc</description>
        <details>
            <![CDATA[
            Credentials text
]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>JAVA</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>credentials_demos</bundleId>
>>>>>>> rebasing
        <sourceArchive>java/credentials_demo.tar.gz</sourceArchive>
        <projectFolder>JCredentialsDemo</projectFolder>
        <sdkLibDir>JCredentialsDemo/lib</sdkLibDir>
        <destBinaryFile>JCredentialsDemo/build/jar/JCredentialsDemo.jar</destBinaryFile>
    </project>
<<<<<<< 92fc90803f7f4fef98363b3081ee5ccb32944d26
    <project id="credentials_demo_c">
        <name>Credentials C demo</name>
        <description>Kaa Credentials management demo app based on C SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the server-side <b>Credentials management</b> feature based on the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#sdk-type" target="_blank">Kaa C SDK</a>.
	This feature is used to connect to <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-server" target="_blank">Kaa server</a> and authorize the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#endpoint-ep" target="_blank"> endpoint upon <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-client" target="_blank">Kaa client</a> startup.
</p>

<p>
	To handle cases when the endpoint credentials are invalid or revoked, you can use the <code>kaa_set_auth_faliure_handler()</code> method.
	It allows you to set a callback triggered by authorization failure.
</p>

<h1>Launching</h1>

To launch this sample application on the Kaa C SDK:

<ol>
	<li>
		Prepare your C SDK environment.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/C/" target="_blank">Using Kaa endpoint SDKs</a>.
	</li>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive and run the following command from the directory containing the unpacked source files.
			<pre>
				./build.sh deploy
			</pre>
	</li>
	<li>
		The program will ask you to enter the target platform for your build.
		Press Enter to specify the POSIX (default) or enter the name of one of the <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/Supported-platforms/" target="_blank">supported platforms</a> and press Enter.
		The C SDK and the demo application are now built and the demo application is launched.
	</li>
</ol>

Once you built the application, you can start it at any time using the following command.

<pre>
	./build.sh run
</pre>

<h1>Troubleshooting</h1>

<h2>Running the build.sh script returns an error message</h2>

<pre>
	Please, put the generated C/C++ SDK tarball into the libs/kaa folder and re-run the script.
</pre>

<p>
	This means that no SDK tarball was found in the libs/kaa directory.
</p>

Try the following:

<ul>
	<li>
		Download and install the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-sandbox" target="_blank">Kaa Sandbox</a>.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/Getting-started/" target="_blank">Getting started</a>.
	</li>
	<li>
		Download the SDK tarball for this sample application and put it in the libs/kaa folder.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Your-first-Kaa-application/#generating-sdk" target="_blank">Generating SDK</a>.
	</li>
</ul>

<h2>CMake returns an error message</h2>

<pre>
	CMake error: The following variables are used in this project, but they are set to NOTFOUND: (...)
</pre>

<p>
	This means that CMake could not find the required libraries because they were not installed correctly.
	To address this issue, check if you completed all the required steps of the <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/C/" target="_blank">C SDK installation instructions</a>.
</p>

For more information, see:

<ul>
	<li>
		<a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Debugging-and-troubleshooting/" target="_blank">General troubleshooting page</a>.
	</li>
	<li>
		<a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/C/SDK-Linux/" target="_blank">C SDK installation guide for Linux (host)</a>.
	</li>
</ul>
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>C</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86</platforms>
        <features>CREDENTIALS</features>
        <complexity>BASIC</complexity>
        <bundleId>credentials_demos</bundleId>
        <sourceArchive>c/credentials_demo.tar.gz</sourceArchive>
        <projectFolder>CCredentialsDemo</projectFolder>
        <sdkLibDir>CCredentialsDemo/libs/kaa</sdkLibDir>
        <destBinaryFile>CCredentialsDemo/build/demo_client</destBinaryFile>
    </project>
=======
    <project id="credentials_demo_no_sdk">
        <name>Credentials Admin part</name>
        <description>Credentials admin desc</description>
        <details>
            <![CDATA[
            Credentials admin text
]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>JAVA</sdkLanguage>
        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>credentials_demos</bundleId>
        <sourceArchive>no-sdk/credentials_demo.tar.gz</sourceArchive>
        <projectFolder>JCredentialsAdminDemo</projectFolder>
        <sdkLibDir>JCredentialsAdminDemo/lib</sdkLibDir>
        <destBinaryFile>JCredentialsAdminDemo/build/jar/JCredentialsAdminDemo.jar</destBinaryFile>
    </project>
    <bundle id="credentials_demos">
        <name>Credentials demos</name>
        <description>Kaa Credentials subsystem demo applications bundle</description>
        <details>
            <![CDATA[
This bundle contains applications that demonstrates capabilities of the Kaa Credentials subsystem.

Please note that all the features of <a href="http://docs.kaaproject.org/display/KAA/Administration+UI+guide">Administrative UI</a> are also supported by <a href="http://docs.kaaproject.org/display/KAA/Admin+REST+API">REST API</a>.

<h2>What's next?</h2>
For more background on the Kaa Credentials subsystem please refer to the corresponding <a href="http://docs.kaaproject.org/display/KAA/Distributing+data+to+endpoints">programming guide</a> section.
]]>
        </details>
    </bundle>
>>>>>>> rebasing
</projectsConfig>
