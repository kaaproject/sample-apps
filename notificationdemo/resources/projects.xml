<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig
        xmlns="http://www.kaaproject.org"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="notification_demo_java">
        <name>Notification Java demo</name>
        <description>Kaa Notification subsystem demo app based on Java SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <b>Notification extension</b> based on the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#sdk-type" target="_blank">Kaa Java SDK</a>.
	This extension enables <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> to receive <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications" target="_blank">notifications</a> from <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
</p>

To implement that feature for Java SDK, the following classes and methods are used:

<ul>
	<li>
		<code>NotificationTopicListListener</code> class gets notification topics after they are updated on the server side.
	</li>
	<li>
		<code>NotificationListener</code> class gets notification messages.
		It is used by Kaa client to receive all notification messages for the endpoint.
	</li>
	<li>
		<code>getTopics</code> method returns the list of available notification topics upon Kaa client startup.
		Use this method only after starting up the Kaa client.
	</li>
	<li>
		<code>subscribeToTopic</code> method subscribes an endpoint to an optional notification topic available.
	</li>
</ul>

When you close the Kaa client, be sure to unsubscribe from notification topics and remove NotificationTopicListListener.
In this app we provide example for this action.

<h1>Launching</h1>

<p>
	To launch this sample application on the Kaa Java SDK, you need to prepare your Java SDK environment.
	To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/Java/" target="_blank">Using Kaa endpoint SDKs</a>.
</p>

<p>
	For sample applications that utilize Kaa Java SDK, both the binary files (.jar archive) and the source code (.tar.gz archive) are available for download.
	If you want to only launch the sample application, download the binary files.
	If you want to explore the source code of the sample application, download the source code archive.
</p>

<h2>Install using the binary files</h2>

To install the Notification sample application using the binary files:
	
<ol>
	<li>
		Click the <b>Binary</b> button.
		A binary build window will open.
		Click <b>Ok</b> and download the .jar file.
	</li>
	<li>
		Run the following command from the directory containing the downloaded .jar archive.
		
		<pre>
			$ java -jar NotificationDemo.jar
		</pre>
		
		The sample application console will display the startup message.
								
	</li>
</ol>

<h2>Install using the source code</h2>

To install the Notification sample application using the source code:

<ol>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive.
	</li>
	<li>
		To build from new sources, you need to have the <a href="http://ant.apache.org/" target="_blank">Apache Ant</a> installed on your host machine.
		To install Apache Ant, run the following command from the directory containing the unpacked sources.
		
		<pre>
			$ ant debug
		</pre>
		
		To launch the sample application from the previously built sources run the following command from the directory containing the sources.
		
		<pre>
			$ java -jar build/jar/Notification.jar
		</pre>
	</li>
</ol>
	
If you want to modify the sample application source code or create your own applications using the Kaa platform, see <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Your-first-Kaa-application/" target="_blank">Your first Kaa application</a>.
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>JAVA</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>NOTIFICATION</features>
        <complexity>BASIC</complexity>
        <bundleId>notification_demos</bundleId>
        <sourceArchive>java/notification_demo.tar.gz</sourceArchive>
        <projectFolder>JNotificationDemo</projectFolder>
        <sdkLibDir>JNotificationDemo/lib</sdkLibDir>
        <destBinaryFile>JNotificationDemo/build/jar/NotificationDemo.jar</destBinaryFile>
    </project>
    <project id="notification_demo_cpp">
        <name>Notification C++ demo</name>
        <description>Kaa Notification subsystem demo app based on C++ SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <b>Notification extension</b> based on the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#sdk-type" target="_blank">Kaa C++ SDK</a>.
	This extension enables <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> to receive <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications" target="_blank">notifications</a> from <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
</p>

<h1>Launching</h1>

To launch this sample application on the Kaa C++ SDK:

<ol>
	<li>
		Prepare your C++ SDK environment.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/C++/" target="_blank">Using Kaa endpoint SDKs</a>.
	</li>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive and run the following command from the directory containing the unpacked source files.
		
		<p>
			<b>Windows</b>
			<pre>
				build.bat deploy
			</pre>
		</p>
		<p>
			<b>Linux, OS X (macOS)</b>
			<pre>
				./build.sh deploy
			</pre>
		</p>
	</li>
	<li>
		The program will ask you to enter the target platform for your build.
		Press Enter to specify POSIX (default) or enter the name of one of the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/Supported-platforms/" target="_blank">supported platforms</a> and press Enter.
		The C++ SDK and the demo application are now built and the demo application is launched.
	</li>
</ol>

Once you built the application, you can start it at any time using the following command.

<p>
	<b>Windows</b>
	<pre>
		build.bat run
	</pre>
</p>
<p>
	<b>Linux, OS X (macOS)</b>
	<pre>
		./build.sh run
	</pre>
</p>
	
<h1>Troubleshooting</h1>

<h2>Running the build.sh script returns an error message</h2>

<pre>
	Please, put the generated C/C++ SDK tarball into the libs/kaa folder and re-run the script.
</pre>

<p>
	This means that no SDK tarball was found in the libs/kaa directory.
</p>

Try the following:

<ul>
	<li>
		Download and install the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-sandbox" target="_blank">Kaa Sandbox</a>.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Getting-started/" target="_blank">Getting started</a>.
	</li>
	<li>
		Download the SDK tarball for this sample application and put it in the libs/kaa folder.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Your-first-Kaa-application/#generating-sdk" target="_blank">Generating SDK</a>.
	</li>
</ul>

<h2>CMake returns an error message</h2>

<pre>
	CMake error: The following variables are used in this project, but they are set to NOTFOUND: (...)
</pre>

<p>
	This means that CMake could not find the required libraries because they were not installed correctly.
	To address this issue, check if you completed all the required steps of the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/C++/" target="_blank">C++ SDK installation instructions</a>.
</p>
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>CPP</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86</platforms>
        <features>NOTIFICATION</features>
        <complexity>BASIC</complexity>
        <bundleId>notification_demos</bundleId>
        <sourceArchive>cpp/notification_demo.tar.gz</sourceArchive>
        <projectFolder>CppNotificationDemo</projectFolder>
        <sdkLibDir>CppNotificationDemo/libs/kaa</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <project id="notification_demo_android">
        <name>Notification Android demo</name>
        <description>Kaa Notification subsystem demo app based on Java SDK for Android</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <b>Notification extension</b> based on <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#sdk-type" target="_blank">Android</a>.
	This extension enables <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> to receive <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications" target="_blank">notifications</a> from <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
</p>

<h1>Launching</h1>

<p>
	For sample applications that run on Android, both the binary files (.apk package) and the source code (.tar.gz archive) are available for download.
	If you want to only launch the sample application, download the binary files.
	If you want to explore the source code of the sample application, download the source code archive.
</p>

<h2>Install using the binary files</h2>

To install this sample application using the binary files:
	
<ol>
	<li>
		Click the <b>Binary</b> button.
		A binary build window will open.
		Click <b>Ok</b> and download the .apk file.
	</li>
	<li>
		<p>
			<b>Android</b>
			<br />
			Copy the .apk file to your Android device and open it to install.
			The sample application console will display the startup message.
		</p>
		<p>
			<b>Windows</b>
			<br />
			Connect the Android device to your Windows machine and run the following command from the sdk/platform-tools directory.
			<pre>
				adb install <path_to_the_apk>/app-debug.apk
			</pre>
		</p>
		<p>
			<b>Linux</b>
			<br />
			Connect the Android device to your Linux machine and run the following command from the sdk/platform-tools directory.
			<pre>
				./adb install <path_to_the_apk>/app-debug.apk
			</pre>
		</p>
	</li>
</ol>

<h2>Install using the source code</h2>

To install this sample application using the source code:

<ol>
	<li>
		Install Kaa SDK on your host machine using <a href="https://developer.android.com/studio/index.html#downloads" target="_blank">Android Studio</a>.
	</li>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive and run the following command from the directory containing the unpacked source files.
		
		<pre>
			./gradlew assembleDebug
		</pre>
		
		The .apk file will be created in the app/build/outputs/apk/ directory.
	</li>
	<li>
		Follow the installation instructions described in the <b>Install using the binary files</b> section.
	</li>
</ol>
	
If you want to modify the sample application source code or create your own applications using the Kaa platform, see <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Your-first-Kaa-application/" target="_blank">Your first Kaa application</a>.
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>JAVA</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>ANDROID</platforms>
        <features>NOTIFICATION</features>
        <complexity>BASIC</complexity>
        <bundleId>notification_demos</bundleId>
        <sourceArchive>android/notification_demo.tar.gz</sourceArchive>
        <projectFolder>notification_demo/NotificationDemo</projectFolder>
        <sdkLibDir>notification_demo/NotificationDemo/app/libs</sdkLibDir>
        <destBinaryFile>notification_demo/NotificationDemo/app/build/outputs/apk/app-debug.apk</destBinaryFile>
    </project>
    <project id="notification_demo_c">
        <name>Notification C demo</name>
        <description>Kaa Notification subsystem demo app based on C SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <b>Notification extension</b> based on the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#sdk-type" target="_blank">Kaa C SDK</a>.
	This extension enables <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> to receive <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications" target="_blank">notifications</a> from <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
	The default configuration is statically stored in the Kaa SDK and is used in case no updates from the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#operations-service" target="_blank">Operations service</a> are available.
</p>

<h1>Launching</h1>

To launch this sample application on the Kaa C SDK:

<ol>
	<li>
		Prepare your C SDK environment.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/C/" target="_blank">Using Kaa endpoint SDKs</a>.
	</li>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive and run the following command from the directory containing the unpacked source files.
			<pre>
				./build.sh deploy
			</pre>
	</li>
	<li>
		The program will ask you to enter the target platform for your build.
		Press Enter to specify the x86-64 platform (default) or enter the name of one of the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/Supported-platforms/" target="_blank">supported platforms</a> and press Enter.
		The C SDK and the demo application are now built and the demo application is launched.
	</li>
</ol>

Once you built the application, you can start it at any time using the following command.

<pre>
	./build.sh run
</pre>

<h1>Troubleshooting</h1>

<h2>Running the build.sh script returns an error message</h2>

<pre>
	Please, put the generated C/C++ SDK tarball into the libs/kaa folder and re-run the script.
</pre>

<p>
	This means that no SDK tarball was found in the libs/kaa directory.
</p>

Try the following:

<ul>
	<li>
		Download and install the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-sandbox" target="_blank">Kaa Sandbox</a>.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Getting-started/" target="_blank">Getting started</a>.
	</li>
	<li>
		Download the SDK tarball for this sample application and put it in the libs/kaa folder.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Your-first-Kaa-application/#generating-sdk" target="_blank">Generating SDK</a>.
	</li>
</ul>

<h2>CMake returns an error message</h2>

<pre>
	CMake error: The following variables are used in this project, but they are set to NOTFOUND: (...)
</pre>

<p>
	This means that CMake could not find the required libraries because they were not installed correctly.
	To address this issue, check if you completed all the required steps of the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/C/" target="_blank">C SDK installation instructions</a>.
</p>
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>C</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86</platforms>
        <features>NOTIFICATION</features>
        <complexity>BASIC</complexity>
        <bundleId>notification_demos</bundleId>
        <sourceArchive>c/notification_demo.tar.gz</sourceArchive>
        <projectFolder>CNotificationDemo</projectFolder>
        <sdkLibDir>CNotificationDemo/libs/kaa</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <project id="notification_demo_objc">
        <name>Notification Objective-C demo</name>
        <description>Kaa Notification subsystem demo app based on Objective-C SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications/" target="_blank">notifications</a> feature based on the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#sdk-type" target="_blank">Kaa Objective-C SDK</a>.
	This feature enables <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> to receive <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications" target="_blank">notifications</a> from <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
</p>

<p>
	The sample application uses the following API call methods:
	<ul>
		<li>
			<code>addNotificationDelegate:</code> method adds a new object to the delegates list when notified about a new message.
		</li>
		<li>
			<code>addTopicListDelegate:</code> method adds a new object to the delegates list when notified about the topics list update.
		</li>
		<li>
			<code>getTopics:</code> method returns an array of available topics.
		</li>
		<li>
			<code>subscribeToTopicWithId:</code> method subscribes Kaa client to a certain notification topic if it's available.
		</li>
		<li>
			<code>onListUpdated:</code> method calls upon update of the topics list.
		</li>
		<li>
			<code>onNotification:withTopicId:</code> method calls upon receiving a notification.
		</li>
    </ul>
</p>

<h1>Launching</h1>

<p>
	Before launching the application, make sure you have the latest version of xCode and CocoaPods installed.
</p>

To launch this sample application on the Kaa Objective-C SDK:

<ol>
	<li>
		Prepare your Objective-C SDK environment.
		To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/Objective-C/" target="_blank">Using Kaa endpoint SDKs</a>.
	</li>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive and run the following command from the directory containing the unpacked source files.
		
		<pre>
			sh build.sh compile
		</pre>
		
		The build script will extract the Kaa SDK, install dependencies with CocoaPods and build the SDK.
	</li>
	<li>
		Open the NotificationDemo.xcodeproj file and click the <b>Play</b> button.
		You should see the following console messages.
		
		<pre>
			2016-07-29 18:30:39.249 NotificationDemo[21069:5316667] NotificationDemo started
			2016-07-29 18:30:39.268 NotificationDemo[21069:5317199] Kaa client started
			2016-07-29 18:30:39.268 NotificationDemo[21069:5316667] Topic id:1 name:Sample mandatory topic type: 0
			2016-07-29 18:30:39.268 NotificationDemo[21069:5316667] Topic id:2 name:Sample optional topic type: 1
		</pre>
		
	</li>
</ol>

To subscribe for an optional topic, enter the topic ID.

<h1>Troubleshooting</h1>

<h2>Running the build script returns an error message</h2>

<pre>
	[!] Invalid `Podfile` file: [!] Unsupported options `{:exclusive=>true}` for target `KaaTests`.
</pre>

<p>
	This error can occur when using newer than version 1.0 of Cocoapods.
</p>

Try the following:

<ol>
	<li>
		Run the following command from the ./libs/kaa-ep-sdk/ folder.
		
		<pre>
			vim Podfile
		</pre>
		
	</li>
	<li>
		Delete <b>:exclusive=>true</b>.
	</li>
	<li>
		Run this command.
		
		<pre>
			pod install
		</pre>
		
	</li>
</ol>

Now you can open the NotificationDemo.xcodeproj file and run the build script.

<h2>Nothing happens after the "Build succeeded" message</h2>

Make sure that the build target is set to <b>NotificationDemo</b>, not <b>Kaa</b>.
            ]]>
        </details>
        <sdkLanguage>OBJC</sdkLanguage>
        <platforms>IOS</platforms>
        <features>NOTIFICATION</features>
        <complexity>BASIC</complexity>
        <bundleId>notification_demos</bundleId>
        <sourceArchive>objc/notification_demo.tar.gz</sourceArchive>
        <projectFolder>ObjCNotificationDemo</projectFolder>
        <sdkLibDir>ObjCNotificationDemo/libs</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <bundle id="notification_demos">
        <name>Notification demos</name>
        <description>Kaa Notification subsystem demo applications bundle</description>
        <details>
            <![CDATA[
<p>
	This application bundle demonstrates the features of the Kaa <b>Notification extension</b>.
	This extension enables your <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#endpoint-ep" target="_blank">endpoint device</a> to receive notifications from the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-server" target="_blank">Kaa server</a>.
	You can manage notifications using the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications/#notification-topics" target="_blank">notification topics</a>.
	Each notification topic can be assigned to any number of <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#endpoint-group" target="_blank">endpoint groups</a>.
	An endpoint will receive a notification if the topic of that notification is assigned to the group that the endpoint is a member of.
</p>	
<p>
	Notifications do not just transfer data to the endpoints, they make the endpoints perform actions.
	For example, a notification can make a <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-client" target="_blank">Kaa client</a> display a message through the user interface.
	Notifications can be sent from the Kaa server to the endpoints either by administrator using the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#administration-ui" target="_blank">administration UI</a> or by an application using the <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-administrator" target="_blank">Kaa administrator</a> REST API.
	For more information about notifications management, see <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications/" target="_blank">Notifications</a>.
</p>

<h1>Playing around</h1>

<p>
	This sample application enables the Kaa client to receive notifications of predefined structure.
	The structure of a notification is defined in the notification schema.
	You can create and manage notifications schemas using the <b>Administration</b> page.
</p>
<p>
	To play around with the sample application, download the binaries/sources for the target platform and start the application.
	To do this, choose the target platform below and follow the instructions on the dedicated page.
</p>

<h2>Manage notification schema details</h2>

To manage notification schema details:

<ol>
	<li>
		Click the <b>Administration</b> button, enter username <b>devuser</b> and password <b>devuser123</b>.
	</li>
	<li>
		Click the <b>Applications</b> arrow to unfold the list.
		Click <b>Notification demo</b> > <b>Schemas</b> > <b>Notification</b>.
		You will see the list of all notifications schemas stored for your <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Glossary/#kaa-application" target="_blank">Kaa application</a>.
		
		<br />
		<img src="https://raw.github.com/hunch7/sample-apps/app-188-notification-bundle/notificationdemo/resources/pic/notif_demo_1.png" />
		<br />
		<br />
		
	</li>
	<li>
		Select the <b>Security alert</b> schema by clicking on the corresponding row.
		The <b>Notification schema details</b> page will open.
		
		<br />
		<img src="https://raw.github.com/hunch7/sample-apps/app-188-notification-bundle/notificationdemo/resources/pic/notif_demo_2.png" />
		<br />
		<br />
		
		The <b>Security alert</b> schema is included in the Sandbox for demonstration purpose.
		You can create, upload, and edit your own schemas.
		For more information, see <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Notifications/#notification-schema" target="_blank">Notifications schema</a>.
	</li>
</ol>

<h2>Create notification topics</h2>

<p>
	Use notification topics to configure and send notifications to endpoint groups.
	Notifications can be mandatory or optional.
	Optional notifications will be received by the assigned groups of endpoints only if the user manually subscribes certain endpoint groups to receive the optional notifications.
	Mandatory notifications will be received by the assigned groups of endpoints by default, no manual subscription is required.
	You cannot unsubscribe an endpoint group from the mandatory notifications.
</p>

To create a notification topic:

<ol>
	<li>
		Click <b>Administration</b> > <b>Applications</b> > <b>Notification demo</b> > <b>Notification topic</b>.
		The page will display the list of available topics.
		
		<br />
		<img src="https://raw.github.com/hunch7/sample-apps/app-188-notification-bundle/notificationdemo/resources/pic/notif_demo_3.png" />
		<br />
		<br />
		
		If you start your Kaa client, the console will display the following message.
		
		<pre>
			2016-05-31 13:23:52,645 [main] INFO  o.k.k.d.n.NotificationDemo - Notification demo started
			2016-05-31 13:23:52,647 [main] INFO  o.k.k.d.n.NotificationDemo - --= Press any key to exit =--
			2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Available topics:
			2016-05-31 13:23:54,105 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Topic ID: 250, name: Sample mandatory topic, type: MANDATORY_SUBSCRIPTION
			2016-05-31 13:23:54,106 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Topic ID: 251, name: Sample optional topic, type: OPTIONAL_SUBSCRIPTION
			2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Subscribed to topics:
			2016-05-31 13:23:54,105 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Topic ID: 250, name: Sample mandatory topic, type: MANDATORY_SUBSCRIPTION
			2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Type topic ID to subscribe
		</pre>
		
		The message above informs the user which topics the endpoint is subscribed to and which are available for subscription.
	
	</li>
	<li>
		Click the <b>Add notification topic</b> button.
		The <b>Notification topic details</b> page will open.
		
		<br />
		<img src="https://raw.github.com/hunch7/sample-apps/app-188-notification-bundle/notificationdemo/resources/pic/notif_demo_4.png" />
		<br />
		<br />
		
	</li>
	<li>
		Enter a <b>Name</b> and <b>Description</b> (optional) for your new notification topic.
		If you want to make your notification topic mandatory, check the <b>Mandatory</b> checkbox.
	</li>
	<li>
		Click <b>Add</b>.
		Your new notification topic will appear on the list of notification topics.
	</li>
</ol>

To configure and send a notification:

<ol>
	<li>
		Click <b>Administration</b> > <b>Applications</b> > <b>Notification demo</b> > <b>Notification topic</b>.
	</li>
	<li>
		Select a notification topic by clicking on the corresponding row.
		The <b>Notification topic details</b> page will open.
	</li>
	<li>
		Click <b>Send notification</b>.
		The <b>Notification details</b> page will open.
		
		<br />
		<img src="https://raw.github.com/hunch7/sample-apps/app-188-notification-bundle/notificationdemo/resources/pic/notif_demo_5.png" />
		<br />
		<br />
		
	</li>
	<li>
		Select the notification schema you want to use.
		Optionally, you can specify the notification expiration date and the endpoint KeyHash.
		If you specify a KeyHash, the notification will only be sent to the endpoint with that KeyHash.
	</li>
	<li>
		In the <b>Notification body</b> section, enter a message you want to send with the notification and click <b>Send</b>.
		If you start your Kaa client, the console will display the following message.
		
		<pre>
			...
			2016-05-31 13:23:54,109 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification for topic ID [250] received.
			2016-05-31 13:23:54,153 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification body: Hello from Kaa Cluster, Notification alert type: Code green
			...
			2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Type topic ID to subscribe
		</pre>
		
		The console message above informs the user about the notification message and notification topic ID.
	</li>
</ol>

<p>
	You can subscribe your endpoint to optional notification topics.
	To do this, type the notification topic ID in the console.
</p>

<pre>
	...
	2016-05-31 13:23:54,107 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Subscribing to optional topic 251
	2016-05-31 13:23:54,153 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification for topic ID [251] received.
	2016-05-31 13:23:54,153 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification body: This is sample notification for optional topic. Client should subscribe to optional topics in order to receive notifications. This application subscribes to optional topics automatically.
	...
	2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Type topic ID to subscribe
</pre>

	<p>	
		The console will only display the notifications that are not expired.
	</p>
	<p>				
		To test this, you can set a value in the <b>Expires at</b> field of the <b>Notification details</b> page.
		For example, you can set it for 1 minute for the notification topic ID 251 above.
		After 1 minute, the client console will stop receiving messages from notification topic ID 251 and will continue displaying other messages.
		
		<pre>
			...
			2016-05-31 13:23:54,109 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification for topic ID [250] received.
			2016-05-31 13:23:54,109 [pool-4-thread-1] INFO  o.k.k.d.n.NotificationDemo - Notification body: message, Message alert type: Code green
			...
			2016-05-31 13:23:53,519 [main] INFO  o.k.k.d.n.NotificationDemo - Type topic ID to subscribe
		</pre>
		
	</p>
	
<h1>What's next?</h1>

<p>
	You can use the <b>Administration</b> page to assign notification topics to endpoint groups.
</p>

To do this:

<ol>
	<li>
		Click <b>Administration</b> > <b>Applications</b> > <b>Notification demo</b> > <b>Endpoint groups</b>.
		Select a group by clicking the corresponding row.
		The <b>Endpoint group details</b> page will open.
	</li>
	<li>
		Under the <b>Notification topic</b> section, click the <b>Add notification topic</b> button.
	</li>
	<li>
		In the <b>Add topic to endpoint group</b> window, select a notification topic and click <b>Add</b>.
		The selected notification topic will appear in the <b>Notification topics</b> section list.
	</li>
</ol>

<p>
	For more information about how to create and manage endpoint groups, see <a href="http://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Key-platform-features/Endpoint-groups/" target="_blank">Endpoint groups</a>.
</p>
]]>
        </details>
    </bundle>
</projectsConfig>
