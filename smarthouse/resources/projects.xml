<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig 
    xmlns="http://www.kaaproject.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="smarthouse_demo_android">
        <name>Smart house</name>
        <description>Smart house demo app for Android</description>
        <details>
            <![CDATA[
This app demonstrates the capabilities of the Kaa Event subsystem for Android.

<h2>Installation</h2>
Download the .apk to your Android device by clicking the "Binary" button on the left. Make sure that the device permits installing apps from "Unknown sources". Open the downloaded apk and follow the on-screen instructions.

<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. You will need to install this application on at least two devices. Start the application on one of the devices and choose "Smart House". Any password will be accepted since the trustful user verifier is used for user verification.

Start the application on the second device and choose "Thermostat" or "Sound System". This will automatically generate and display a QR code on the deviceâ€™s screen. Use the first device application (smart house) to scan this QR code and connect the second device to the same user. Now you can control your thermostat or the sound system from the smart house application.
<br/><br/>

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

For more background on the Kaa Event subsystem please refer to the corresponding programming guide and design reference sections.
        	]]>
        </details>
        
        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->
             
        <sdkLanguage>JAVA</sdkLanguage>
        
        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->
             
        <platforms>ANDROID</platforms>
        <features>EVENT USER_VERIFIER</features>
        <complexity>BASIC</complexity>
        <sourceArchive>android/smarthouse_demo.tar.gz</sourceArchive>
        <projectFolder>smarthouse_demo/SmartHouseDemo</projectFolder>
        <sdkLibDir>smarthouse_demo/SmartHouseDemo/libs</sdkLibDir>
        <destBinaryFile>smarthouse_demo/SmartHouseDemo/bin/SmartHouseDemo-debug.apk</destBinaryFile>
    </project>
</projectsConfig>