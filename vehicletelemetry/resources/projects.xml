<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig 
    xmlns="http://www.kaaproject.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="vehicletelemetry_demo_cpp">
        <name>Vehicle telemetry demo</name>
        <description>Kaa vehicle telemetry demo app based on C++ SDK</description>
	    <details><![CDATA[
This simple app demonstrates Kaa data collection subsystem capabilities on C++ SDK.

<h2>Installation</h2>
Download the source code by clicking the "Source" button on the left. Build the source code using endpoint build and integration <a href="http://docs.kaaproject.org/display/KAA/Endpoint+build+and+integration+instructions#Endpointbuildandintegrationinstructions-BuildingC++endpointSDK">instructions</a>.

<h2>Playing around</h2>
Make sure that the Kaa sandbox is up and running. Starting the "Data collection demo" app, you will trigger delivery of five log messages to Kaa cluster. Kaa cluster will write this messages to local MongoDB database using <a href="http://docs.kaaproject.org/display/KAA/Log+appenders#Logappenders-MongoDBlogappender">MongoDB appender</a>.
You can explore collected data by querying sandbox MongoDB instance:
<pre>
$ mongo kaa
db.logs_$your_application_token$.find()
</pre>

Where $your_application_token$ is the application token you can copy from the main application page of the Administrative UI.<br/><br/>

Now it's time to test things out: navigate to the Kaa server administrative interface by clicking on the "Administrative console" link from the Sandbox screen. Log in as a tenant developer (devuser / devuser123), and navigate to the "Data collection demo" application, then select "Log appenders". From here you can <a href="http://docs.kaaproject.org/display/KAA/Administration+UI+guide#AdministrationUIguide-Logappenders">manage log appenders</a>. Do not forget to activate updated configuration - otherwise the endpoint will not be able to see it. Make sure you have tried creating Flume or Cassandra log appenders!<br/><br/>

Please note that all features of <a href="http://docs.kaaproject.org/display/KAA/Administration+UI+guide">Administrative UI</a> are also supported by <a href="http://docs.kaaproject.org/display/KAA/Admin+REST+API">REST API</a>.

<h2>What's next?</h2>
Get the source code by clicking the "Source" button on the left and start hacking!<br/><br/>

For more background on Kaa data collection subsystem please refer to the corresponding <a href="http://docs.kaaproject.org/display/KAA/Collecting+data+from+endpoints">programming guide</a> and <a href="http://docs.kaaproject.org/display/KAA/Logging">design reference</a> sections.
            ]]></details>
            
        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->
             
        <sdkLanguage>CPP</sdkLanguage>
        
        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->
        
        <platforms>LINUX_X86</platforms>
        <features>DATA_COLLECTION</features>
        <complexity>BASIC</complexity>
        <sourceArchive>cpp/vehicletelemetry_demo.tar.gz</sourceArchive>
        <projectFolder>CppVehicleTelemetry</projectFolder>
        <sdkLibDir>CppVehicleTelemetry/libs/kaa</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
</projectsConfig>