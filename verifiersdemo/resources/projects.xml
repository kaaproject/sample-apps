<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig 
    xmlns="http://www.kaaproject.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="verifiers_demo_android">
        <name>User verifiers demo android</name>
        <description>Kaa user verifiers demo app for Android</description>
        <details>
            <![CDATA[
This simple app demonstrates a user verification flow in Kaa for Android.

<h2>Installation</h2>
Download the .apk to your Android device by clicking the "Binary" button on the left. Make sure that the device permits installing apps from "Unknown sources". Open the downloaded apk and follow the on-screen instructions.

<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. After opening the "User verifiers demo" app, you will be able to log in to Facebook, Google or Twitter in order to get verified by the corresponding user verifier. After the verification is complete, you can start sending test messages to other devices through the Kaa Event subsystem.

Now it's time to test things out: install this app on different devices and log in with the same account. Once logged in, enter your message on some device and send it to other devices where you logged into the application. Please note that this demo is not an attempt to implement yet another "chat application". It is rather a PoC of a way to connect and exchange messages between devices that belong to the same user.

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

For more background on the user verification refer to the corresponding design reference section. It is also possible to implement a custom user verifier using programming guide.
        	]]>
        </details>
            
        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->
             
        <sdkLanguage>JAVA</sdkLanguage>
        
        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->
        
        <platforms>ANDROID</platforms>
        <features>EVENT USER_VERIFIER</features>
        <complexity>BASIC</complexity>
        <sourceArchive>android/verifiers_demo.tar.gz</sourceArchive>
        <projectFolder>verifiers_demo/VerifiersDemo</projectFolder>
        <sdkLibDir>verifiers_demo/VerifiersDemo/libs</sdkLibDir>
        <destBinaryFile>verifiers_demo/VerifiersDemo/bin/VerifiersDemo-debug.apk</destBinaryFile>
    </project>
    <project id="verifiers_demo_ios">
        <name>GPIO control iOS</name>
        <description>User verifiers demo iOS</description>
        <details>
            <![CDATA[
This simple app demonstrates a user verification flow in Kaa on iOS.
]]>
        </details>
        <sdkLanguage>OBJC</sdkLanguage>
        <platforms>IOS</platforms>
        <features>USER_VERIFIER</features>
        <complexity>REGULAR</complexity>
        <bundleId>verifiers_demo</bundleId>
        <sourceArchive>objc/verifiers_demo.tar.gz</sourceArchive>
        <projectFolder>verifiers_demo</projectFolder>
        <sdkLibDir>verifiers_demo/libs</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>

</projectsConfig>
